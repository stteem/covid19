{"version":3,"sources":["components/Header.js","calculator/estimate.js","components/ImpactResult.js","components/SevereImpact.js","components/ImpactForm.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Header","Navbar","dark","expand","className","NavbarBrand","href","Component","currentlyInfectedImpact","dataObj","reportedCases","currentlyInfectedSevereImpact","periodType","days","timeToElapse","Math","trunc","RequestedTimeImpact","currentlyInfected","factor","RequestedTimeSevereImpact","impactCases","severeCases","hospitalBedsImpact","bedSpace","totalHospitalBeds","hospitalBedsSevereImpact","ICUImpact","ICUSevereImpact","VentilatorsImpact","VentilatorsSevere","dollarsInFlightImpact","infectionsByRequestedTime","avgIncomePop","region","avgDailyIncomePopulation","avgIncomeUSD","avgDailyIncomeInUSD","dollarsInFlightSevereImpact","covid19ImpactEstimator","data","impact","severeCasesByRequestedTime","hospitalBedsByRequestedTime","casesForICUByRequestedTime","casesForVentilatorsByRequestedTime","dollarsInFlight","severeImpact","ImpactResult","estimate","Card","CardBody","CardTitle","CardText","SevereImpact","DATA","name","avgAge","population","ImpactForm","props","state","handleClick","bind","getData","this","setState","value","avgIncomeUsd","result","type","placeholder","data-region","ref","c","data-avg-age","data-income","data-population","data-period-type","data-time-to-elapse","data-reported-cases","data-total-hospital-beds","Button","onClick","data-go-estimate","Main","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.665dfc06.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand } from 'reactstrap';\r\n\r\n\r\n\r\nclass Header extends Component {\r\n    \r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                        COVID-19 Impact Estimator\r\n                        </NavbarBrand>\r\n                    </div>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","\r\n// Challenge 1\r\n\r\nconst currentlyInfectedImpact = (dataObj) => dataObj.reportedCases * 10;\r\n\r\nconst currentlyInfectedSevereImpact = (dataObj) => dataObj.reportedCases * 50;\r\n\r\nconst periodType = (dataObj) => {\r\n  let days;\r\n  if (dataObj.periodType === 'weeks') {\r\n    days = dataObj.timeToElapse * 7;\r\n    return Math.trunc(days / 3);\r\n  }\r\n  if (dataObj.periodType === 'months') {\r\n    days = dataObj.timeToElapse * 30;\r\n    return Math.trunc(days / 3);\r\n  }\r\n\r\n  return Math.trunc(dataObj.timeToElapse / 3);\r\n};\r\n\r\nconst days = (dataObj) => {\r\n  if (dataObj.periodType === 'weeks') {\r\n    return dataObj.timeToElapse * 7;\r\n  }\r\n  if (dataObj.periodType === 'months') {\r\n    return dataObj.timeToElapse * 30;\r\n  }\r\n  return dataObj.timeToElapse;\r\n};\r\n\r\nconst RequestedTimeImpact = (dataObj) => {\r\n  const currentlyInfected = dataObj.reportedCases * 10;\r\n  const factor = periodType(dataObj);\r\n  return currentlyInfected * (2 ** factor);\r\n};\r\n\r\nconst RequestedTimeSevereImpact = (dataObj) => {\r\n  const currentlyInfected = dataObj.reportedCases * 50;\r\n  const factor = periodType(dataObj);\r\n  return currentlyInfected * (2 ** factor);\r\n};\r\n\r\n// Challenge 2\r\n\r\nconst impactCases = (dataObj) => Math.trunc(0.15 * RequestedTimeImpact(dataObj));\r\n\r\nconst severeCases = (dataObj) => Math.trunc(0.15 * RequestedTimeSevereImpact(dataObj));\r\n\r\nconst hospitalBedsImpact = (dataObj) => {\r\n  const bedSpace = 0.35 * dataObj.totalHospitalBeds;\r\n  return Math.trunc(bedSpace - impactCases(dataObj));\r\n};\r\n\r\nconst hospitalBedsSevereImpact = (dataObj) => {\r\n  const bedSpace = 0.35 * dataObj.totalHospitalBeds;\r\n  return Math.trunc(bedSpace - severeCases(dataObj));\r\n};\r\n\r\n// Challenge 3\r\n\r\nconst ICUImpact = (dataObj) => Math.trunc(0.05 * RequestedTimeImpact(dataObj));\r\n\r\nconst ICUSevereImpact = (dataObj) => Math.trunc(0.05 * RequestedTimeSevereImpact(dataObj));\r\n\r\nconst VentilatorsImpact = (dataObj) => Math.trunc(0.02 * RequestedTimeImpact(dataObj));\r\n\r\nconst VentilatorsSevere = (dataObj) => Math.trunc(0.02 * RequestedTimeSevereImpact(dataObj));\r\n\r\nconst dollarsInFlightImpact = (dataObj) => {\r\n  const infectionsByRequestedTime = RequestedTimeImpact(dataObj);\r\n  const avgIncomePop = dataObj.region.avgDailyIncomePopulation;\r\n  const avgIncomeUSD = dataObj.region.avgDailyIncomeInUSD;\r\n  return Math.trunc(\r\n    (infectionsByRequestedTime * avgIncomePop * avgIncomeUSD) / days(dataObj)\r\n  );\r\n};\r\n\r\nconst dollarsInFlightSevereImpact = (dataObj) => {\r\n  const infectionsByRequestedTime = RequestedTimeSevereImpact(dataObj);\r\n  const avgIncomePop = dataObj.region.avgDailyIncomePopulation;\r\n  const avgIncomeUSD = dataObj.region.avgDailyIncomeInUSD;\r\n  return Math.trunc(\r\n    (infectionsByRequestedTime * avgIncomePop * avgIncomeUSD) / days(dataObj)\r\n  );\r\n};\r\n\r\nconst covid19ImpactEstimator = (dataObj) => ({\r\n  data: {}, // the input data you got\r\n  impact: {\r\n    currentlyInfected: currentlyInfectedImpact(dataObj),\r\n    infectionsByRequestedTime: RequestedTimeImpact(dataObj),\r\n    severeCasesByRequestedTime: impactCases(dataObj),\r\n    hospitalBedsByRequestedTime: hospitalBedsImpact(dataObj),\r\n    casesForICUByRequestedTime: ICUImpact(dataObj),\r\n    casesForVentilatorsByRequestedTime: VentilatorsImpact(dataObj),\r\n    dollarsInFlight: dollarsInFlightImpact(dataObj)\r\n  }, // your best case estimation\r\n  severeImpact: {\r\n    currentlyInfected: currentlyInfectedSevereImpact(dataObj),\r\n    infectionsByRequestedTime: RequestedTimeSevereImpact(dataObj),\r\n    severeCasesByRequestedTime: severeCases(dataObj),\r\n    hospitalBedsByRequestedTime: hospitalBedsSevereImpact(dataObj),\r\n    casesForICUByRequestedTime: ICUSevereImpact(dataObj),\r\n    casesForVentilatorsByRequestedTime: VentilatorsSevere(dataObj),\r\n    dollarsInFlight: dollarsInFlightSevereImpact(dataObj)\r\n  } // your severe case estimation\r\n});\r\n\r\n\r\nexport default covid19ImpactEstimator;","import React from 'react';\r\nimport { Card, CardBody, CardTitle, CardText } from 'reactstrap';\r\n\r\n\r\nfunction ImpactResult({estimate}) {\r\n\r\n\tif (estimate !== null) {\r\n\t\treturn(\r\n\t\t\t<div className=\"col-12 col-sm-4 col-md-4\">\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t<CardTitle><h5>Impact</h5></CardTitle>\r\n\t\t\t\t\t\t<CardText>Currently Infected: {estimate.impact.currentlyInfected}</CardText>\r\n\t\t\t\t\t\t<CardText>Infections By Requested Time: {estimate.impact.infectionsByRequestedTime}</CardText>\r\n\t\t\t\t\t\t<CardText>Severe Cases By Requested Time: {estimate.impact.severeCasesByRequestedTime}</CardText>\r\n\t\t\t\t\t\t<CardText>Hospital Beds By Requested Time: {estimate.impact.hospitalBedsByRequestedTime}</CardText>\r\n\t\t\t\t\t\t<CardText>Cases For ICU By Requested Time: {estimate.impact.casesForICUByRequestedTime}</CardText>\r\n\t\t\t\t\t\t<CardText>Cases For Ventilators By Requested Time: {estimate.impact.casesForVentilatorsByRequestedTime}</CardText>\r\n\t\t\t\t\t\t<CardText>Dollars In Flight: {estimate.impact.dollarsInFlight}</CardText>\r\n\t\t\t\t\t</CardBody>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\telse {\r\n\t\treturn(<div></div>);\r\n\t}\t\t\r\n}\r\n\r\nexport default ImpactResult;","import React from 'react';\r\nimport { Card, CardBody, CardTitle, CardText } from 'reactstrap';\r\n\r\n\r\nfunction SevereImpact({estimate}) {\r\n\r\n\tif (estimate !== null) {\r\n\t\treturn(\r\n\t\t\t<div className=\"col-12 col-sm-4 col-md-4\">\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t<CardTitle><h5>Severe Impact</h5></CardTitle>\r\n\t\t\t\t\t\t<CardText>Currently Infected: {estimate.severeImpact.currentlyInfected}</CardText>\r\n\t\t\t\t\t\t<CardText>Infections By Requested Time: {estimate.severeImpact.infectionsByRequestedTime}</CardText>\r\n\t\t\t\t\t\t<CardText>Severe Cases By Requested Time: {estimate.severeImpact.severeCasesByRequestedTime}</CardText>\r\n\t\t\t\t\t\t<CardText>Hospital Beds By Requested Time: {estimate.severeImpact.hospitalBedsByRequestedTime}</CardText>\r\n\t\t\t\t\t\t<CardText>Cases For ICU By Requested Time: {estimate.severeImpact.casesForICUByRequestedTime}</CardText>\r\n\t\t\t\t\t\t<CardText>Cases For Ventilators By Requested Time: {estimate.severeImpact.casesForVentilatorsByRequestedTime}</CardText>\r\n\t\t\t\t\t\t<CardText>Dollars In Flight: {estimate.severeImpact.dollarsInFlight}</CardText>\r\n\t\t\t\t\t</CardBody>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\telse {\r\n\t\treturn(<div></div>);\r\n\t}\t\t\r\n}\r\n\r\nexport default SevereImpact;","import React, { Component } from 'react';\r\nimport { Card, CardTitle, Button } from 'reactstrap';\r\nimport covid19ImpactEstimator from '../calculator/estimate.js';\r\nimport ImpactResult from './ImpactResult';\r\nimport SevereImpact from './SevereImpact';\r\n\r\n\r\n\r\nconst DATA = {\r\n\t\t\t\tregion: {\r\n\t\t\t\t\tname: \"\",\r\n\t\t\t\t\tavgAge: null,\r\n\t\t\t\t\tavgDailyIncomeInUSD: null,\r\n\t\t\t\t\tavgDailyIncomePopulation: null\r\n\t\t\t\t},\r\n\t\t\t\tperiodType: \"\",\r\n\t\t\t\ttimeToElapse: null,\r\n\t\t\t\treportedCases: null,\r\n\t\t\t\tpopulation: null,\r\n\t\t\t\ttotalHospitalBeds: null\r\n\t\t\t};\r\n\r\nclass ImpactForm extends Component {\r\n\r\n\tconstructor(props) {\r\n\t    super(props);\r\n\t    this.state = {\r\n\t\t\tdata:  DATA,\r\n\t\t\testimate: null\r\n\t    };\r\n\r\n\t    this.handleClick = this.handleClick.bind(this);\r\n\t\tthis.getData = this.getData.bind(this);\r\n\t}\r\n\r\n\thandleClick() {\r\n\r\n\t\tthis.setState({\r\n\t\t\tdata: {\r\n\t\t\t\tregion: {\r\n\t\t\t\t\tname: this.region.value,\r\n\t\t\t\t\tavgAge: this.avgAge.value,\r\n\t\t\t\t\tavgDailyIncomeInUSD: this.avgIncomeUsd.value,\r\n\t\t\t\t\tavgDailyIncomePopulation: this.avgIncomePop.value\r\n\t\t\t\t},\r\n\t\t\t\tperiodType: this.periodType.value,\r\n\t\t\t\ttimeToElapse: this.timeToElapse.value,\r\n\t\t\t\treportedCases: this.reportedCases.value,\r\n\t\t\t\tpopulation: this.population.value,\r\n\t\t\t\ttotalHospitalBeds: this.totalHospitalBeds.value\r\n\t\t\t}, \r\n\t\t}, this.getData );\r\n\t}\r\n\r\n\tgetData() {\r\n\t\tconst result = covid19ImpactEstimator(this.state.data);\r\n\t\tthis.setState({estimate: result});\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"intro\">\r\n\t\t\t\t\t<h4>COVID-19 Infections And Impact Estimation</h4>\r\n\t\t\t\t\t<p>COVID-19 has been declared a pandemic by WHO. In line with fighting the virus to a standstill, we have leveraged WHO metrics to build a tool that\r\n\t\t\t\t\t\testimates, and forecasts infections impact by region. We hope this tool will come in handy for all stakeholders. Feel free to input appriopriate data in order to get estimates.</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t    <div className=\"col-12 col-md-4\">\r\n\t\t\t\t    <Card className=\"main\">\r\n\t\t\t\t    \t<CardTitle className=\"centre\"><h5>Estimation Tool</h5></CardTitle>\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t<label className=\"col-12 col-md-12\">\r\n\t\t\t\t\t\t\t<strong>Region</strong>\r\n\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Region\" data-region ref={(c) => this.region = c} name=\"region\" />\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<label className=\"col-12 col-md-12\">\r\n\t\t\t\t\t\t\t<strong>Average Age</strong>\r\n\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Average Age\" data-avg-age ref={(c) => this.avgAge = c} name=\"avgAge\"  />\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<label className=\"col-12 col-md-12\">\r\n\t\t\t\t\t\t\t<strong>Average Income In USD</strong>\r\n\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Average Income USD\" data-income ref={(c) => this.avgIncomeUsd = c} name=\"avgIncomeUsd\" />\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<label className=\"col-12 col-md-12\">\r\n\t\t\t\t\t\t\t<strong>Average Population Income</strong>\r\n\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Average Income Population\" data-population ref={(c) => this.avgIncomePop = c} name=\"avgIncomePop\" />\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<label className=\"col-12 col-md-12\">\r\n\t\t\t\t\t\t\t<strong>Days, Weeks Or Months</strong>\r\n\t\t\t\t\t\t\t<select className=\"form-control\" data-period-type ref={(c) => this.periodType = c} name=\"periodType\" >\r\n\t\t\t\t\t\t\t\t<option>Days</option>\r\n\t\t\t\t\t\t\t\t<option>Weeks</option>\r\n\t\t\t\t\t\t\t\t<option>Months</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<label className=\"col-12 col-md-12\">\r\n\t\t\t\t\t\t\t<strong>Time To Elapse</strong>\r\n\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Time To Elapse\" data-time-to-elapse ref={(c) => this.timeToElapse = c} name=\"timeToElapse\" />\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<label className=\"col-12 col-md-12\">\r\n\t\t\t\t\t\t\t<strong>Reported Cases</strong>\r\n\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Reported Cases\" data-reported-cases ref={(c) => this.reportedCases = c} name=\"reportedCases\" />\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<label className=\"col-12 col-md-12\">\r\n\t\t\t\t\t\t\t<strong>Population</strong>\r\n\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Population\" data-population ref={(c) => this.population = c} name=\"population\" />\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<label className=\"col-12 col-md-12\">\r\n\t\t\t\t\t\t\t<strong>Total Hospital Beds</strong>\r\n\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Total Hospital Beds\" data-total-hospital-beds ref={(c) => this.totalHospitalBeds = c} name=\"totalHospitalBeds\" />\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<div className=\"col-12 col-md-12\">\r\n\t\t\t\t\t\t\t<Button type=\"button\" className=\"form-control estimate_button\" onClick={this.handleClick} data-go-estimate >Estimate</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<ImpactResult estimate={this.state.estimate} />\r\n\t\t\t\t\t<SevereImpact estimate={this.state.estimate} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ImpactForm;","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport ImpactForm from './ImpactForm';\r\n\r\n\r\nclass Main extends Component {\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<ImpactForm />\r\n\t\t\t</div>\r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Main;","import React, {Component} from 'react';\nimport './App.css';\nimport { HashRouter } from 'react-router-dom';\nimport Main from './components/Main';\n\n\n\n\n\nclass App extends Component {\n    \n\n  render() {\n        return (\n          <HashRouter>\n            <div className=\"\">\n                <Main />\n            </div>\n          </HashRouter>\n        );\n    }\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}